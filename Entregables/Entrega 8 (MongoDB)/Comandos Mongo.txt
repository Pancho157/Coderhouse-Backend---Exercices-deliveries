
----------------- Selecciona BBDD (y la genera si no existe) -------------------

use ecommerce



----------------- Ingreso de productos a la tabla de productos (Y genera la tabla en caso de no existir) -------------------

db.products.insert([
  { _id: 1, title: "Primer producto de prueba", thumbnail: "url", stock: 11 },
  { _id: 2, title: "Segundo producto de prueba", thumbnail: "url", stock: 1 },
  { _id: 3, title: "Tercer producto de prueba", thumbnail: "url", stock: 6 },
  { _id: 4, title: "Cuarto producto de prueba", thumbnail: "url", stock: 9 },
  { _id: 5, title: "Quinto producto de prueba", thumbnail: "url", stock: 9 },
  { _id: 6, title: "Sexto producto de prueba", thumbnail: "url", stock: 14 },
  { _id: 7, title: "Septimo producto de prueba", thumbnail: "url", stock: 18 },
  { _id: 8, title: "Octavo producto de prueba", thumbnail: "url", stock: 12 },
  { _id: 9, title: "Noveno producto de prueba", thumbnail: "url", stock: 2 },
  { _id: 10, title: "Decimo producto de prueba", thumbnail: "url", stock: 3 },
]);

Al hacer db.products.find() devuelve los 10 productos agregados a la tabla



----------------- Ingreso de mensajes a la tabla de mensajes (Y genera la tabla en caso de no existir) -------------------

db.messages.insert([
  { _id: 1, email: "emailDePrueba@gmail.com", date: new Date().toLocaleDateString() + " " + new Date().toTimeString().split(" "), message: "Primer mensaje" },
  { _id: 2, email: "emailDePrueba@gmail.com", date: new Date().toLocaleDateString() + " " + new Date().toTimeString().split(" "), message: "Segundo mensaje" },
  { _id: 3, email: "emailDePrueba@gmail.com", date: new Date().toLocaleDateString() + " " + new Date().toTimeString().split(" "), message: "Terccer mensaje" },
  { _id: 4, email: "emailDePrueba@gmail.com", date: new Date().toLocaleDateString() + " " + new Date().toTimeString().split(" "), message: "Cuarto mensaje" },
  { _id: 5, email: "emailDePrueba@gmail.com", date: new Date().toLocaleDateString() + " " + new Date().toTimeString().split(" "), message: "Quinto mensaje" },
  { _id: 6, email: "emailDePrueba@gmail.com", date: new Date().toLocaleDateString() + " " + new Date().toTimeString().split(" "), message: "Sexto mensaje" },
  { _id: 7, email: "emailDePrueba@gmail.com", date: new Date().toLocaleDateString() + " " + new Date().toTimeString().split(" "), message: "Septimo mensaje" },
  { _id: 8, email: "emailDePrueba@gmail.com", date: new Date().toLocaleDateString() + " " + new Date().toTimeString().split(" "), message: "Octavo mensaje" },
  { _id: 9, email: "emailDePrueba@gmail.com", date: new Date().toLocaleDateString() + " " + new Date().toTimeString().split(" "), message: "Noveno mensaje" },
  { _id: 10, email: "emailDePrueba@gmail.com", date: new Date().toLocaleDateString() + " " + new Date().toTimeString().split(" "), message: "Decimo mensaje" },
]);

Al guardar las fechas utilicé el código de debajo (comprobé que funciona)

new Date().toLocaleDateString() + " " + new Date().toTimeString().split(" ")
Como se guarda => '21/9/2022 09:04:39,GMT-0300,(hora,estándar,de,Argentina)'


Al hacer db.messages.find() devuelve los 10 mensajes agregados a la tabla



----------------- Agregar el campo "price" a los productos (Entre 100 y 5000) -------------------

db.products.aggregate([
  { $set: { price: { $multiply: [{ $rand: {} }, 4900] } } },
  { $set: { price: { $floor: "$price" } } },
  { $set: { price: { $sum: ["$price", 100] } } },
  { $merge: "products" },
]);

Básicamente es la fórmula => "price": Math.floor(Math.random()*(max - min) + min)